#include<iostream>
using namespace std;
int main() {
int r,p,i,j,q;
cout<<"enter no.of resourses:";
cin>>r;
int avail[r]={0};
int re[r];
cout<<"enter instances of resorces:";
for(i=0;i<r;i++) {
cin>>re[i];
}
cout<<"enter no. of processes:";
cin>>p;
int a[p][r];
cout<<"enter allocation matrix:"<<endl;
int k=0;
for(i=0;i<p;i++) {
for(j=0;j<r;j++) {
cin>>a[i][j];
}
for(k=0;k<j;k++) {
avail[k]+=a[i][k];
}
}
k=0;
int ul=0,sl=0,o=0;
int unsafe[p]={-1},safe[p];
cout<<"enter max matrix"<<endl;
int m[p][r];
for(i=0;i<p;i++) {
for(j=0;j<r;j++) {
cin>>m[i][j];
}
}
for(i=0;i<r;i++) {
avail[i]=re[i]-avail[i];
}
int n[p][r];
for(i=0;i<p;i++) {
for(j=0;j<r;j++) {
n[i][j]=m[i][j]-a[i][j];
}
}
ul=0;
sl=0;
int d=r;
for(i=0;i<p;i++) {
for(j=0;j<r;j++) {
if(avail[j]>=n[i][j]) {
d-=1;
}
else {
unsafe[ul++]=i;
break;
}
if(d==0) {
d=r;
for(k=0;k<r;k++)
avail[k]=avail[k]+a[i][k];
safe[sl++]=i;
}
}
}
int c=0;
int e=0;
int u=ul;
int cnt=0;
while(ul!=0 ) {
if(unsafe[e]!=-1) {
for(c=0;c<r;c++) {
if(avail[c]>=n[unsafe[e]][c]) {
d-=1;
}
if(d==0) {
d=r;
for(k=0;k<r;k++){
avail[k]=avail[k]+a[c][k];
}
safe[sl++]=unsafe[e];
unsafe[e]=-1;
ul--;
}
}
}
e++;
if(e>=u) {
e=0;
}
cnt++;
}
cout<<"safe sequence:"<<" ";
for(i=0;i<p;i++) {
cout<<safe[i]<<" ";
}
return 0;
}
